const t=/(NORTH|SOUTH|[NS])?[\s]*([+-]?[0-8]?[0-9](?:[\.,]\d{3,}))[\s]*([•º°]?)[\s]*(NORTH|SOUTH|[NS])?[\s]*[,/;]?[\s]*(EAST|WEST|[EW])?[\s]*([+-]?[0-1]?[0-9]?[0-9](?:[\.,]\d{3,}))[\s]*([•º°]?)[\s]*(EAST|WEST|[EW])?/i;const e=/(NORTH|SOUTH|[NS])?\s*([+-]?[0-8]?[0-9])\s*(\.)\s*([0-5]?[0-9])\s*(\.)\s*((?:[0-5]?[0-9])(?:[\.,]\d{1,3})?)?\s*(NORTH|SOUTH|[NS])?(?:\s*[,/;]\s*|\s*)(EAST|WEST|[EW])?\s*([+-]?[0-1]?[0-9]?[0-9])\s*(\.)\s*([0-5]?[0-9])\s*(\.)\s*((?:[0-5]?[0-9])(?:[\.,]\d{1,3})?)?\s*(EAST|WEST|[EW])?/i;const i=/(NORTH|SOUTH|[NS])?\s*([+-]?[0-8]?[0-9])\s*(D(?:EG)?(?:REES)?)\s*([0-5]?[0-9])\s*(M(?:IN)?(?:UTES)?)\s*((?:[0-5]?[0-9])(?:[\.,]\d{1,3})?)?\s*(S(?:EC)?(?:ONDS)?)?\s*(NORTH|SOUTH|[NS])?(?:\s*[,/;]\s*|\s*)(EAST|WEST|[EW])?\s*([+-]?[0-1]?[0-9]?[0-9])\s*(D(?:EG)?(?:REES)?)\s*([0-5]?[0-9])\s*(M(?:IN)?(?:UTES)?)\s*((?:[0-5]?[0-9])(?:[\.,]\d{1,3})?)?\s*(S(?:EC)?(?:ONDS)?)\s*(EAST|WEST|[EW])?/i;const a=/(NORTH|SOUTH|[NS])?\s*([+-]?[0-8]?[0-9])\s*([•º°\.:]|D(?:EG)?(?:REES)?)?\s*,?([0-5]?[0-9](?:[\.,]\d{1,})?)?\s*(['′´’\.:]|M(?:IN)?(?:UTES)?)?\s*,?((?:[0-5]?[0-9])(?:[\.,]\d{1,3})?)?\s*(''|′′|’’|´´|["″”\.])?\s*(NORTH|SOUTH|[NS])?(?:\s*[,/;]\s*|\s*)(EAST|WEST|[EW])?\s*([+-]?[0-1]?[0-9]?[0-9])\s*([•º°\.:]|D(?:EG)?(?:REES)?)?\s*,?([0-5]?[0-9](?:[\.,]\d{1,})?)?\s*(['′´’\.:]|M(?:IN)?(?:UTES)?)?\s*,?((?:[0-5]?[0-9])(?:[\.,]\d{1,3})?)?\s*(''|′′|´´|’’|["″”\.])?\s*(EAST|WEST|[EW])?/i;
/**
 * Converts decimalCoordinates to other formats commonly used
 * @param {*} format Either DMS or DM
 */function toCoordinateFormat(t){if(!["DMS","DM","DD"].includes(t))throw new Error("invalid format specified");if(this.decimalCoordinates&&this.decimalCoordinates.trim()){if("DD"==t)return this.decimalCoordinates;const e=this.decimalCoordinates.split(",").map((t=>Number(t.trim())));let i=convert$1(e[0],t,true);let a=convert$1(e[1],t,false);if(i.endsWith('.0"')&&a.endsWith('.0"')){i=i.replace(/\.0"$/,'"');a=a.replace(/\.0"$/,'"')}const r=e[0]>=0?" N":" S";const d=e[1]>=0?" E":" W";return`${i+r}, ${a+d}`}throw new Error("no decimal coordinates to convert")}function convert$1(t,e){const i=Math.abs(t);const a=Math.floor(i);const r=60*(i-a);if("DM"==e){let t=round(r,3).toFixed(3).padStart(6,"0");return`${a}° ${t}'`}let d=Math.floor(r);let o=(60*(r-d)).toFixed(1).padStart(4,"0");d=d.toString().padStart(2,"0");return`${a}° ${d}' ${o}"`}function round(t,e){const i=Math.pow(10,e);return Math.round((t+Number.EPSILON)*i)/i}
/**
 * Function for converting coordinates in a variety of formats to decimal coordinates
 * @param {string} coordsString The coordinates string to convert
 * @param {number} decimalPlaces The number of decimal places for converted coordinates; default is 5
 * @returns {object} { verbatimCoordinates, decimalCoordinates, decimalLatitude, decimalLongitude }
 */function converter(r,d){d||(d=5);r=r.replace(/\s+/g," ").trim();let o=null;let n=null;let m="";let s="";let u=[];let b=false;if(t.test(r)){u=t.exec(r);b=checkMatch(u);if(!b)throw new Error("invalid decimal coordinate format");o=u[2];n=u[6];o.includes(",")&&(o=o.replace(",","."));n.includes(",")&&(n=n.replace(",","."));if(Number(Math.round(o))==Number(o))throw new Error("integer only coordinate provided");if(Number(Math.round(n))==Number(n))throw new Error("integer only coordinate provided");if(u[1]){m=u[1];s=u[5]}else if(u[4]){m=u[4];s=u[8]}}else if(e.test(r)){u=e.exec(r);b=checkMatch(u);if(!b)throw new Error("invalid DMS coordinates format");o=Math.abs(parseInt(u[2]));u[4]&&(o+=u[4]/60);u[6]&&(o+=u[6].replace(",",".")/3600);parseInt(u[2])<0&&(o*=-1);n=Math.abs(parseInt(u[9]));u[11]&&(n+=u[11]/60);u[13]&&(n+=u[13].replace(",",".")/3600);parseInt(u[9])<0&&(n*=-1);if(u[1]){m=u[1];s=u[8]}else if(u[7]){m=u[7];s=u[14]}}else if(i.test(r)){u=i.exec(r);b=checkMatch(u);if(!b)throw new Error("invalid DMS coordinates format");o=Math.abs(parseInt(u[2]));u[4]&&(o+=u[4]/60);u[6]&&(o+=u[6]/3600);parseInt(u[2])<0&&(o*=-1);n=Math.abs(parseInt(u[10]));u[12]&&(n+=u[12]/60);u[14]&&(n+=u[14]/3600);parseInt(u[10])<0&&(n*=-1);if(u[1]){m=u[1];s=u[9]}else if(u[8]){m=u[8];s=u[16]}}else if(a.test(r)){u=a.exec(r);b=checkMatch(u);if(!b)throw new Error("invalid coordinates format");o=Math.abs(parseInt(u[2]));u[4]&&(o+=u[4]/60);u[6]&&(o+=u[6]/3600);parseInt(u[2])<0&&(o*=-1);n=Math.abs(parseInt(u[10]));u[12]&&(n+=u[12]/60);u[14]&&(n+=u[14]/3600);parseInt(u[10])<0&&(n*=-1);if(u[1]){m=u[1];s=u[9]}else if(u[8]){m=u[8];s=u[16]}}if(b){if(Math.abs(n)>=180)throw new Error("invalid longitude value");if(Math.abs(o)>=90)throw new Error("invalid latitude value");if((m||s)&&(!m||!s))throw new Error("invalid coordinates format");if(m&&m==s)throw new Error("invalid coordinates format");let t=/S|SOUTH/i;t.test(m)&&o>0&&(o*=-1);t=/W|WEST/i;t.test(s)&&n>0&&(n*=-1);const e=u[0].trim();let i;let a;const b=/[,/;\u0020]/g;const c=e.match(b);if(null==c){const t=Math.floor(r.length/2);i=e.substring(0,t).trim();a=e.substring(t).trim()}else{let t;t=c.length%2==1?Math.floor(c.length/2):c.length/2-1;let r=0;if(0==t){r=e.indexOf(c[0]);i=e.substring(0,r).trim();a=e.substring(r+1).trim()}else{let d=0;let o=0;while(d<=t){r=e.indexOf(c[d],o);o=r+1;d++}i=e.substring(0,r).trim();a=e.substring(r+1).trim()}}const v=i.split(".");if(2==v.length&&0==v[1]&&2!=v[1].length)throw new Error("invalid coordinates format");const l=a.split(".");if(2==l.length&&0==l[1]&&2!=l[1].length)throw new Error("invalid coordinates format");if(/^\d+$/.test(i)||/^\d+$/.test(a))throw new Error("degree only coordinate/s provided");isNaN(o)&&o.includes(",")&&(o=o.replace(",","."));o=Number(Number(o).toFixed(d));isNaN(n)&&n.includes(",")&&(n=n.replace(",","."));n=Number(Number(n).toFixed(d));return Object.freeze({verbatimCoordinates:e,verbatimLatitude:i,verbatimLongitude:a,decimalLatitude:o,decimalLongitude:n,decimalCoordinates:`${o},${n}`,closeEnough:coordsCloseEnough,toCoordinateFormat:toCoordinateFormat})}throw new Error("coordinates pattern match failed")}function checkMatch(t){if(!isNaN(t[0]))return false;const e=[...t];e.shift();if(e.length%2>0)return false;const i=/^[-+]?\d+([\.,]\d+)?$/;const a=/[eastsouthnorthwest]+/i;const r=e.length/2;for(let t=0;t<r;t++){const d=e[t];const o=e[t+r];const n=i.test(d)&&i.test(o);const m=a.test(d)&&a.test(o);const s=d==o;if(void 0!=d||void 0!=o){if(void 0==d||void 0==o)return false;if(!(n||m||s))return false}}return true}function decimalsCloseEnough(t,e){const i=Math.abs(t-e);const a=Number(i.toFixed(6));return a<=1e-5}function coordsCloseEnough(t){if(t.includes(",")){const e=t.split(",");if(NaN==Number(e[0])||NaN==Number(e[1]))throw new Error("coords are not valid decimals");return decimalsCloseEnough(this.decimalLatitude,Number(e[0]))&&decimalsCloseEnough(this.decimalLongitude,e[1])}throw new Error("coords being tested must be separated by a comma")}const r=Object.freeze({DMS:"DMS",DM:"DM",DD:"DD"});converter.to=r;const d=[{verbatimCoordinates:"40.123, -74.123",verbatimLatitude:"40.123",verbatimLongitude:"-74.123"},{verbatimCoordinates:"40.123° N 74.123° W",verbatimLatitude:"40.123° N",verbatimLongitude:"74.123° W"},{verbatimCoordinates:"40.123° N 74.123° W",verbatimLatitude:"40.123° N",verbatimLongitude:"74.123° W"},{verbatimCoordinates:'40° 7´ 22.8" N 74° 7´ 22.8" W',verbatimLatitude:'40° 7´ 22.8" N',verbatimLongitude:'74° 7´ 22.8" W'},{verbatimCoordinates:"40° 7.38’ , -74° 7.38’",verbatimLatitude:"40° 7.38’",verbatimLongitude:"-74° 7.38’"},{verbatimCoordinates:"N40°7’22.8’’, W74°7’22.8’’",verbatimLatitude:"N40°7’22.8’’",verbatimLongitude:"W74°7’22.8’’"},{verbatimCoordinates:'40°7’22.8"N, 74°7’22.8"W',verbatimLatitude:'40°7’22.8"N',verbatimLongitude:'74°7’22.8"W'},{verbatimCoordinates:"40°7'22.8\"N, 74°7'22.8\"W",verbatimLatitude:"40°7'22.8\"N",verbatimLongitude:"74°7'22.8\"W"},{verbatimCoordinates:"40 7 22.8, -74 7 22.8",verbatimLatitude:"40 7 22.8",verbatimLongitude:"-74 7 22.8"},{verbatimCoordinates:"40.123 -74.123",verbatimLatitude:"40.123",verbatimLongitude:"-74.123"},{verbatimCoordinates:"40.123°,-74.123°",verbatimLatitude:"40.123°",verbatimLongitude:"-74.123°"},{verbatimCoordinates:"40.123N74.123W",verbatimLatitude:"40.123N",verbatimLongitude:"74.123W"},{verbatimCoordinates:"4007.38N7407.38W",verbatimLatitude:"4007.38N",verbatimLongitude:"7407.38W"},{verbatimCoordinates:'40°7’22.8"N, 74°7’22.8"W',verbatimLatitude:'40°7’22.8"N',verbatimLongitude:'74°7’22.8"W'},{verbatimCoordinates:"400722.8N740722.8W",verbatimLatitude:"400722.8N",verbatimLongitude:"740722.8W"},{verbatimCoordinates:"N 40 7.38 W 74 7.38",verbatimLatitude:"N 40 7.38",verbatimLongitude:"W 74 7.38"},{verbatimCoordinates:"40:7:22.8N 74:7:22.8W",verbatimLatitude:"40:7:22.8N",verbatimLongitude:"74:7:22.8W"},{verbatimCoordinates:"40:7:23N,74:7:23W",verbatimLatitude:"40:7:23N",verbatimLongitude:"74:7:23W",decimalLatitude:40.1230555555,decimalLongitude:-74.1230555555},{verbatimCoordinates:'40°7’23"N 74°7’23"W',verbatimLatitude:'40°7’23"N',verbatimLongitude:'74°7’23"W',decimalLatitude:40.1230555555,decimalLongitude:-74.12305555555555},{verbatimCoordinates:'40°7’23"S 74°7’23"E',verbatimLatitude:'40°7’23"S',verbatimLongitude:'74°7’23"E',decimalLatitude:-40.1230555555,decimalLongitude:74.12305555555555},{verbatimCoordinates:'40°7’23" -74°7’23"',verbatimLatitude:'40°7’23"',verbatimLongitude:'-74°7’23"',decimalLatitude:40.1230555555,decimalLongitude:-74.123055555},{verbatimCoordinates:'40d 7’ 23" N 74d 7’ 23" W',verbatimLatitude:'40d 7’ 23" N',verbatimLongitude:'74d 7’ 23" W',decimalLatitude:40.1230555555,decimalLongitude:-74.123055555},{verbatimCoordinates:"40.123N 74.123W",verbatimLatitude:"40.123N",verbatimLongitude:"74.123W"},{verbatimCoordinates:"40° 7.38, -74° 7.38",verbatimLatitude:"40° 7.38",verbatimLongitude:"-74° 7.38"},{verbatimCoordinates:"40° 7.38, -74° 7.38",verbatimLatitude:"40° 7.38",verbatimLongitude:"-74° 7.38"},{verbatimCoordinates:"40 7 22.8; -74 7 22.8",verbatimLatitude:"40 7 22.8",verbatimLongitude:"-74 7 22.8"}];const o={decimalLatitude:40.123,decimalLongitude:-74.123};const n=[{verbatimCoordinates:"50°4'17.698\"south, 14°24'2.826\"east",verbatimLatitude:"50°4'17.698\"south",verbatimLongitude:"14°24'2.826\"east",decimalLatitude:-50.07158277777778,decimalLongitude:14.400785},{verbatimCoordinates:"50d4m17.698S 14d24m2.826E",verbatimLatitude:"50d4m17.698S",verbatimLongitude:"14d24m2.826E",decimalLatitude:-50.07158277777778,decimalLongitude:14.400785},{verbatimCoordinates:"40:26:46N,79:56:55W",verbatimLatitude:"40:26:46N",verbatimLongitude:"79:56:55W",decimalLatitude:40.44611111111111,decimalLongitude:-79.9486111111111},{verbatimCoordinates:"40:26:46.302N 79:56:55.903W",verbatimLatitude:"40:26:46.302N",verbatimLongitude:"79:56:55.903W",decimalLatitude:40.446195,decimalLongitude:-79.94886194444445},{verbatimCoordinates:"40°26′47″N 79°58′36″W",verbatimLatitude:"40°26′47″N",verbatimLongitude:"79°58′36″W",decimalLatitude:40.44638888888889,decimalLongitude:-79.97666666666667},{verbatimCoordinates:"40d 26′ 47″ N 79d 58′ 36″ W",verbatimLatitude:"40d 26′ 47″ N",verbatimLongitude:"79d 58′ 36″ W",decimalLatitude:40.44638888888889,decimalLongitude:-79.97666666666667},{verbatimCoordinates:"40.446195N 79.948862W",verbatimLatitude:"40.446195N",verbatimLongitude:"79.948862W",decimalLatitude:40.446195,decimalLongitude:-79.948862},{verbatimCoordinates:"40,446195° 79,948862°",verbatimLatitude:"40,446195°",verbatimLongitude:"79,948862°",decimalLatitude:40.446195,decimalLongitude:79.948862},{verbatimCoordinates:"40° 26.7717, -79° 56.93172",verbatimLatitude:"40° 26.7717",verbatimLongitude:"-79° 56.93172",decimalLatitude:40.446195,decimalLongitude:-79.948862},{verbatimCoordinates:"40.446195, -79.948862",verbatimLatitude:"40.446195",verbatimLongitude:"-79.948862",decimalLatitude:40.446195,decimalLongitude:-79.948862},{verbatimCoordinates:"40.123256; -74.123256",verbatimLatitude:"40.123256",verbatimLongitude:"-74.123256",decimalLatitude:40.123256,decimalLongitude:-74.123256},{verbatimCoordinates:"18°24S 22°45E",verbatimLatitude:"18°24S",verbatimLongitude:"22°45E",decimalLatitude:-18.4,decimalLongitude:22.75}];const m=[{verbatimCoordinates:"10.432342S 10.6345345E",verbatimLatitude:"10.432342S",verbatimLongitude:"10.6345345E",decimalLatitude:-10.432342,decimalLongitude:10.6345345},{verbatimCoordinates:"10.00S 10.00E",verbatimLatitude:"10.00S",verbatimLongitude:"10.00E",decimalLatitude:-10,decimalLongitude:10},{verbatimCoordinates:"00.00S 01.00E",verbatimLatitude:"00.00S",verbatimLongitude:"01.00E",decimalLatitude:0,decimalLongitude:1},{verbatimCoordinates:"18.24S 22.45E",verbatimLatitude:"18.24S",verbatimLongitude:"22.45E",decimalLatitude:-18.4,decimalLongitude:22.75},{verbatimCoordinates:"27deg 15min 45.2sec S 18deg 32min 53.7sec E",verbatimLatitude:"27deg 15min 45.2sec S",verbatimLongitude:"18deg 32min 53.7sec E",decimalLatitude:-27.262555555555554,decimalLongitude:18.54825},{verbatimCoordinates:"-23.3245° S / 28.2344° E",verbatimLatitude:"-23.3245° S",verbatimLongitude:"28.2344° E",decimalLatitude:-23.3245,decimalLongitude:28.2344},{verbatimCoordinates:"40° 26.7717 -79° 56.93172",verbatimLatitude:"40° 26.7717",verbatimLongitude:"-79° 56.93172",decimalLatitude:40.446195,decimalLongitude:-79.948862},{verbatimCoordinates:"27.15.45S 18.32.53E",verbatimLatitude:"27.15.45S",verbatimLongitude:"18.32.53E",decimalLatitude:-27.2625,decimalLongitude:18.548055},{verbatimCoordinates:"-27.15.45 18.32.53",verbatimLatitude:"-27.15.45",verbatimLongitude:"18.32.53",decimalLatitude:-27.2625,decimalLongitude:18.548055},{verbatimCoordinates:"27.15.45.2S 18.32.53.4E",verbatimLatitude:"27.15.45.2S",verbatimLongitude:"18.32.53.4E",decimalLatitude:-27.262556,decimalLongitude:18.548167},{verbatimCoordinates:"27.15.45,2S 18.32.53,4E",verbatimLatitude:"27.15.45,2S",verbatimLongitude:"18.32.53,4E",decimalLatitude:-27.262556,decimalLongitude:18.548167},{verbatimCoordinates:"S23.43563 °  E22.45634 °",verbatimLatitude:"S23.43563 °",verbatimLongitude:"E22.45634 °",decimalLatitude:-23.43563,decimalLongitude:22.45634},{verbatimCoordinates:"27,71372° S 23,07771° E",verbatimLatitude:"27,71372° S",verbatimLongitude:"23,07771° E",decimalLatitude:-27.71372,decimalLongitude:23.07771},{verbatimCoordinates:"27.45.34 S 23.23.23 E",verbatimLatitude:"27.45.34 S",verbatimLongitude:"23.23.23 E",decimalLatitude:-27.759444,decimalLongitude:23.38972222},{verbatimCoordinates:"S 27.45.34 E 23.23.23",verbatimLatitude:"S 27.45.34",verbatimLongitude:"E 23.23.23",decimalLatitude:-27.759444,decimalLongitude:23.38972222}];function getAllTestFormats(){const t=[];d.forEach((e=>{e.decimalLatitude?t.push(e):t.push({...e,...o})}));return[...t,...n,...m]}var s=getAllTestFormats();converter.formats=s.map((t=>t.verbatimCoordinates));const u=converter;export{u as convert};


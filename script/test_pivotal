#!/usr/bin/env ruby
# frozen_string_literal: true

require(File.expand_path("config", __dir__))
TESTING = true

# # ----------------------------
# #  Direct access.
# # ----------------------------
#
# require "digest/md5"
# require "net/http"
# require "net/https"
# require "uri"
# require "json"
#
# https = Net::HTTP.new(MO.pivotal_url, 443)
# headers = { "X-TrackerToken" => MO.pivotal_token }
# https.use_ssl = true
#
# path = "#{MO.pivotal_path}/projects/#{MO.pivotal_project}/stories?limit=1000"
# req = Net::HTTP::Get.new(path, headers)
# res = https.request(req)
#
# stories = JSON.parse(res.body).map do |story|
#   data = {
#     :labels   => [],
#     :comments => [],
#   }
#   data[:id]       = story["id"]
#   data[:type]     = story["story_type"]
#   data[:time]     = story["created_at"]
#   data[:state]    = story["current_state"]
#   data[:name]     = story["name"]
#   data[:desc]     = story["description"]
#   data[:labels]   = story["labels"].map {|l| l["name"]}
#   puts data.inspect
#   puts "-"*80
#   data
# end
# puts "Found #{stories.length} stories!"
# exit 0

# ----------------------------
#  Access via Pivotal class.
# ----------------------------

require_relative("../app/classes/pivotal")
require_relative("../app/classes/pivotal/story")
require_relative("../app/classes/pivotal/comment")
require_relative("../app/classes/pivotal/vote")
require_relative("../app/classes/pivotal/user")

# id = MO.pivotal_test_id
# story = Pivotal.get_story(id, :refresh_cache)
# puts story.inspect
# exit 0

stories = Pivotal.get_stories
puts("Found #{stories.length} stories!")
exit(0)

#!/usr/bin/env ruby
# frozen_string_literal: true

#  USAGE::
#
#    script/refresh_caches
#
#  DESCRIPTION::
#
#  This is a nightly cronjob that checks to make sure the classification string
#  of each infrageneric taxon is the same as the classification string for the
#  parent genus.  It checks for missing genera while it's at it.  It prints out
#  a line for each taxon it finds that it has to fix.
#
#  It also makes sure the classification section of the default description
#  matches the classification string cached in the name, preferring the
#  description version above genus, and preferring the cached version below
#  genus.
#
################################################################################

require(File.expand_path("../config/boot.rb", __dir__))
require(File.expand_path("../config/environment.rb", __dir__))

dry_run = false
verbose = false
ARGV.each do |flag|
  case flag
  when "-n", "--dry-run"
    dry_run = true
  when "-v", "--verbose"
    verbose = true
  else
    puts("USAGE: script/refresh_caches [-n|--dry-run] [-v|--verbose]")
    exit(1)
  end
end
DRY_RUN = dry_run
VERBOSE = verbose

START = Time.zone.now
def progress(msg, klass = nil, method = nil)
  puts("#{(Time.zone.now - START).round(1)}: #{msg}") if VERBOSE
  klass ? klass.send(method, dry_run: DRY_RUN) : []
end

msgs = progress("unused or missing synonyms...",
                Synonym, :make_sure_all_referenced_synonyms_exist) +
       progress("self-referential misspellings...",
                Name, :fix_self_referential_misspellings) +
       progress("misformatted names...",
                Name, :make_sure_names_are_bolded_correctly) +
       progress("classification caches...",
                Name, :refresh_classification_caches) +
#      progress("generic classifications...",
#               Name, :propagate_generic_classifications) +
       progress("misspelled observations...",
                Observation, :make_sure_no_observations_are_misspelled) +
       progress("content filter caches...",
                Observation, :refresh_content_filter_caches) +
       progress("observations needing naming...",
                Observation, :refresh_needs_naming_column) +
       progress("observations reviewed...",
                Vote, :update_observation_views_reviewed_column) +
       progress("done")
warn(msgs.join("\n")) if msgs.any?

exit(0)

#!/usr/bin/env ruby
# frozen_string_literal: true

#  USAGE::
#
#    script/refresh_caches
#
#  DESCRIPTION::
#
#  This is a nightly cronjob that performs a bunch of clean-up operations on
#  the database:
#
#    Synonym.make_sure_all_referenced_synonyms_exist
#    Name.fix_self_referential_misspellings
#    Name.make_sure_names_are_bolded_correctly
#    Name.refresh_classification_caches
#    Name.propagate_generic_classifications (currently disabled)
#    Observation.make_sure_no_observations_are_misspelled
#    Observation.refresh_content_filter_caches
#    Observation.refresh_needs_naming_column
#    Vote.update_observation_views_reviewed_column
#    User.cull_unverified_users
#
#  See documentation for each of these class methods for more information.
#
#  (The disabled job is a very complex operation that I still don't fully
#  trust, so I'm just waiting until I have time to spot check a bunch of the
#  literally thousands of changes it wants to make in the database before
#  setting it loose in the wild. -JPH 20240219)
#
################################################################################

require_relative("../config/boot")
require_relative("../config/environment")

dry_run = false
verbose = false
ARGV.each do |flag|
  case flag
  when "-n", "--dry-run"
    dry_run = true
  when "-v", "--verbose"
    verbose = true
  else
    puts("USAGE: script/refresh_caches [-n|--dry-run] [-v|--verbose]")
    exit(1)
  end
end
DRY_RUN = dry_run
VERBOSE = verbose

START = Time.zone.now
def progress(msg, klass = nil, method = nil)
  puts("#{(Time.zone.now - START).round(1)}: #{msg}") if VERBOSE
  klass ? klass.send(method, dry_run: DRY_RUN) : []
end

msgs = progress("unused or missing synonyms...",
                Synonym, :make_sure_all_referenced_synonyms_exist) +
       progress("self-referential misspellings...",
                Name, :fix_self_referential_misspellings) +
       progress("misformatted names...",
                Name, :make_sure_names_are_bolded_correctly) +
       progress("classification caches...",
                Name, :refresh_classification_caches) +
       # progress("generic classifications...",
       #          Name, :propagate_generic_classifications) +
       progress("misspelled observations...",
                Observation, :make_sure_no_observations_are_misspelled) +
       progress("content filter caches...",
                Observation, :refresh_content_filter_caches) +
       progress("observations needing naming...",
                Observation, :refresh_needs_naming_column) +
       progress("observations reviewed...",
                Vote, :update_observation_views_reviewed_column) +
       progress("cull unverified users...",
                User, :cull_unverified_users) +
       progress("update user_stats...",
                UserStats, :refresh_all_user_stats) +
       progress("done")
warn(msgs.join("\n")) if msgs.any?

exit(0)

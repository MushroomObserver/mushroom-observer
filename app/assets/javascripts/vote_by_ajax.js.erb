function VoteByAjaxModule(translations) {
  $(document).ready(function () {

    var _haveVotesChanged = false;
    var _haveVotesBeenSaved = false;

    var save_vote_buttons = function () {
      return $("[data-role='save_vote']");
    };

    var change_vote_selects = function () {
      return $("[data-role='change_vote']");
    };

    var attach_bindings = function () {
      change_vote_selects().change(function (event) {
        var _this = $(this);
        var value = _this.val();
        var naming_id = _this.data("id");
        _haveVotesChanged = true;

        // If setting vote to 3.0, go through all the rest and downgrade any
        // old 3.0's to 2.0.  Only one 3.0 vote is allowed. Also disable all
        // the menus while the AJAX request is pending.
        if (value == "3.0") {
          change_vote_selects().each(function () {
            var _this2 = $(this);
            if (_this2.data("id") != naming_id && _this2.val() == "3.0") {
              _this2.val("2.0");
            }
            _this2.attr("disabled", "disabled");
          });
        }

        var whirly = $("<div class='popup'>").appendTo($("body"))
          .css("padding", "1em 2em")
          .append(
            $("<span>").text(translations.show_namings_saving + "... "),
            $("<img>").attr("src", "<%= asset_path('indicator.gif') %>")
          )
          .center()
          .show();

        $.ajax("/ajax/vote/naming/" + naming_id, {
          data: {value: value, authenticity_token: csrf_token()},
          dataType: "text",
          async: true,
          complete: function (request) {
            _haveVotesChanged = false;
            whirly.remove();
            if (request.status == 200) {
              var html     = $(request.responseText);
              var title    = html.children().eq(0);
              var div      = html.children().eq(1).html();
              var percent  = html.children().eq(2).html();
              var num_vot  = html.children().eq(3).html();
              // update the obs title, votes table, votes and percentage
              document.title = title.attr("title");
              $("#title").html(title.html());
              $("#show_votes_" + naming_id + "_frame").html(div);
              $(".vote-percent[data-id='" + naming_id + "']").html(percent);
              $(".vote-number[data-id='" + naming_id + "']").html(num_vot);
              attach_bindings();
              if (typeof SuggestionModule !== "undefined")
                attach_suggestion_bindings();
              save_vote_buttons().hide();
            } else {
              change_vote_selects().each(function () {
               _this.val(_this.data("old_value"))
                       .attr("disabled", null);
              });
              alert(request.responseText);
            }
          }
        });
      });

      // Save initial value in case of error, when we'll need to revert.
      change_vote_selects().each(function (event) {
        var _this = $(this);
        _this.data("old_value", _this.val());
        _this.attr("disabled", null);
      });
    };

    // Alert the user if they haven't saved data.
    window.onbeforeunload = function () {
      if (_haveVotesChanged && !_haveVotesBeenSaved)
        return translations.show_namings_lose_changes;
    }

    attach_bindings();

    // Don't need this if AJAX available.
    save_vote_buttons().hide();
  });
}

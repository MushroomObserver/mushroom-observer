<%# Nomenclature partial; used by:
    show_name, show_past_name, and add_comment (via _object) %>
<strong><%= :show_name_nomenclature.t %>:</strong>
<div class="list-group" id="nomenclature">
  <div class="list-group-item name-section">

    <div class="row">

      <div class="col-sm-7 name-section">
        <p><%= :RANK.t %>:
           <%= name.rank ? rank_as_string(name.rank) : :unknown.t %></p>
        <p><%= :STATUS.t %>: <%= name.status %>
          <% if name.is_misspelling? %>
            (<%= :MISSPELLED.t %>)
          <% end %></p>
        <p><%= :NAME.t %>: <%= h(name.real_text_name) %></p>
      </div>

      <div class="col-sm-5 name-section">
        <% if name.icn_id? %>
          <p><%= link_to("[##{name.icn_id}]",
                         index_fungorum_record_url(name.icn_id)) %>
             Index Fungorum</p>
          <p><%= link_to("[##{name.icn_id}]",
                         mycobank_record_url(name.icn_id)) %>
             MycoBank</p>
          <p>
            <% if name.at_or_below_species? %>
              <%= link_to(:gsd_species_synonymy.t,
                          species_fungorum_gsd_synonymy(name.icn_id)) %>
            <% elsif [:Genus, :Family].include?(name.rank) %>
              <%= link_to(:sf_species_synonymy.t,
                          species_fungorum_sf_synonymy(name.icn_id)) %>
            <% end %>
          </p>
       <% elsif name.registrable? %>
          <p><%= :ICN_ID.t %>: <em><%= :show_name_icn_id_missing.t %></em></p>
          <p><%= link_to(:index_fungorum_search.t,
                         index_fungorum_basic_search_url) %></p>
          <p><%= link_to(:mycobank_search.t,
                         mycobank_name_search_url(name)) %></p>
        <% elsif name.searchable_in_registry? %>
          <p><%= link_to(:index_fungorum_search.t,
                         index_fungorum_basic_search_url) %></p>
          <p><%= link_to(:mycobank_search.t, mycobank_basic_search_url) %></p>
        <% end %>
      </div>

    </div>

    <p><%= :AUTHORITY.t %>: <%= name.author.to_s.t %></p>
    <p><%= :CITATION.t %>: <%= name.citation.to_s.tl %></p>
    <%
    if name.is_misspelling? %>
      <p><%= :show_name_misspelling_correct.t %>:
      <%=
      if name.correct_spelling
        link_with_query(name.correct_spelling.display_name.t,
                        controller: :name,
                        action: :show_name,
                        id: name.correct_spelling_id)
      else
        # This can apparently happen for past_names.
        name.correct_spelling_id
      end %>
      </p>
    <%
    end %>

    <%
    if synonyms
      approved_synonyms, deprecated_synonyms = name.sort_synonyms
      misspellings = deprecated_synonyms.select(&:correct_spelling_id)
      deprecated_synonyms.reject!(&:correct_spelling_id)
      if approved_synonyms.try(&:any?)
        links = approved_synonyms.map do |n|
          link_with_query(n.display_name.t,
                          controller: :name,
                          action: :show_name,
                          id: n.id,)
        end %>
        <p><%=
        name.deprecated ? :show_name_preferred_synonyms.t : :show_name_synonyms.t
        %>:<%=
        links.safe_join(", ")
        %></p>
      <%
      end
      if deprecated_synonyms.try(&:any?)
        links = deprecated_synonyms.map do |n|
          link_with_query(n.display_name.t,
                          controller: :name,
                          action: :show_name,
                          id: n.id)
        end %>
        <p><%= :show_name_deprecated_synonyms.t %>:
          <%= links.safe_join(", ") %></p>
      <%
      end
      if misspellings.try(&:any?)
        links = misspellings.map do |n|
          link_with_query(n.display_name.t,
                          controller: :name,
                          action: :show_name,
                          id: n.id)
        end %>
        <p><%= :show_name_misspelled_synonyms.t %>:
          <%= links.safe_join(", ") %></p>
      <%
      end
    end %>

  </div>
</div>

<%
# Declaring permitted locals in a magic comment doesn't work here (?)
create = (action == :create)
method = create ? :post : :patch
button_name = create ? :CREATE.l : :SAVE_EDITS.l
has_specimen = create ? false : @observation.herbarium_records.length > 0
logging_optional = create ? false : true
naming_locals = {
  create:,
  button_name:,
  show_reasons: false,
  unfocused:    true,
  name_help:    :form_naming_name_help_leave_blank.t
}
notes_fields = @observation.form_notes_parts(@user)
open_notes = notes_fields.length > 1 || !create # @observation.notes.present?
show_projects = @projects.any? || @error_checked_projects.any? ||
                @suspect_checked_projects.any?
show_lists = @lists.any?

# Data for the form-images Stimulus controller.
# Controller element is the form, so image dropzone can cover the whole form.
max_size = MO.image_upload_max_size
legible_max_size = (max_size.to_f/1024/1024).round
image_upload_localization = {
  uploading_text: :form_observations_uploading_images.t,
  image_too_big_text: :form_observations_image_too_big.t(max: legible_max_size),
  creating_observation_text: :form_observations_creating_observation.t,
  months: :all_months.t,
  show_on_map: :show_on_map.t,
  something_went_wrong: :form_observations_upload_error.t
}.to_json
# Outlets are how the stimulus controllers call each others' methods.
form_element_data = {
  controller: "form-images form-exif map",
  map_autocompleter_outlet: "#observation_location_autocompleter",
  map_open: false,
  form_exif_autocompleter_outlet: "#observation_location_autocompleter",
  form_exif_map_outlet: "#observation_form",
  action: "map:reenableBtns@window->form-exif#reenableButtons",
  upload_max_size: max_size,
  localization: image_upload_localization,
  form_images_target: "form",
  exif_used: create ? false : true
}
%>

<%= form_with(
  model: @observation,
  url: add_query_param(action:, id: @observation,
                       approved_name: @given_name,
                       approved_where: @place_name),
  method:,
  multipart: true,
  id: "observation_form",
  data: form_element_data
) do |f| %>

  <% if @field_code %>
    <%= tag.p("#{:form_observations_field_code.t} #{@field_code}") %>
    <%= hidden_field_tag(:field_code, @field_code) %>
  <% end %>

  <%= panel_block(
    heading: "#{:IMAGES.l} + #{:show_observation_details.l}",
    id: "observation_images_details", formatted_content: true,
    collapse: "observation_images_details_inner", open: true
  ) do
    concat(render(partial: "observations/form/images", locals: { f: }))
    concat(render(partial: "observations/form/details",
                  locals: { f:, action:, button_name:, location: @location,
                            logging_optional: }))
  end %>

  <%= panel_block(
    heading: "#{:IDENTIFICATION.l} + #{:SPECIMEN.l}",
    id: "observation_naming_specimen", # @given_name.present?
    collapse: "observation_naming_specimen_inner", open: true
  ) do
    tag.div(class: "row mt-3") do
      concat(tag.div(class: "col-xs-12 col-md-6") do
        render(partial: "observations/namings/fields", locals: naming_locals)
      end) if create
      concat(tag.div(class: "col-xs-12 col-md-6") do
        render(partial: "observations/form/specimen_section",
               locals: { f:, action: })
      end)
    end
  end %>

  <%= submit_button(form: f, button: button_name, center: true) %>

  <%= panel_block(
    heading: :NOTES.l, id: "observation_notes",
    collapse: "observation_notes_inner", open: open_notes
  ) do
    render(partial: "shared/notes_fields",
           locals: { form: f, fields: notes_fields })
  end %>

  <% if show_projects %>
    <%= panel_block(
      heading: :PROJECTS.l, id: "observation_projects",
      collapse: "observation_projects_inner",
      open: @project_checks.any?
    ) do
      render(partial: "observations/form/projects", locals: { button_name: })
    end %>
  <% end %>

  <% if show_lists %>
    <%= panel_block(
      heading: :SPECIES_LISTS.l, id: "observation_lists",
      collapse: "observation_lists_inner",
      open: @list_checks.any?
    ) do
      render(partial: "observations/form/species_lists")
    end %>
  <% end %>

<% end %><!--[/form:observation]-->

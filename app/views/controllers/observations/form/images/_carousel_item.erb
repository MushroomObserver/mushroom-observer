<%# locals: (image: nil, img_id: nil, upload: false, index: "", f: nil, camera_info: {}, thumb_id: nil) -%>

<%#
This may be rendered by Turbo, or by the edit action
`upload` means: image may be nil... or not, on form reload.
image_src == nil (src set by js)
%>

<%=
active = index == 0 ? "active" : ""
data = { form_images_target: "item", form_exif_target: "item",
         action: "form-exif#populated@window->form-images#itemExifPopulated" }
if upload
  img_id ||= "img_id_missing"
  extra_classes = "carousel-image set-src"
  image_status = "upload"
else
  img_id = image&.id
  data = data.merge(geocode: JSON.generate(camera_info))
  extra_classes = "carousel-image"
  image_status = "good"
end
presenter_args = { size: :large, fit: :contain, extra_classes: extra_classes,
                   upload: upload }
presenter = ImagePresenter.new(img_id, presenter_args)
data = data.merge(image_uuid: img_id, image_status:)
item_attrs = { id: "carousel_item_#{img_id}",
               class: ["item carousel-item", active] }.merge(data: data)
camera_info ||= {}

tag.div(**item_attrs) do
  tag.div(class: "row") do
    [
      tag.div(class: "col-12 col-md-6") do
        concat(tag.div(class: "image-position") do
          concat(image_tag(presenter.img_src, presenter.options_lazy))
        end)
      end,
      tag.div(class: "col-12 col-md-6") do
        tag.div(class: "form-panel") do
          concat(render(partial: "observations/form/images/fields",
                        locals: { upload:, img_id:, image: }))
          concat(render(partial: "observations/form/images/camera_info",
                        locals: camera_info.merge(img_id: img_id)))
        end
      end,
      tag.div(class: "top-left p-4") do
        carousel_set_thumb_img_button(image:, thumb_id:)
      end,
      tag.div(class: "top-right p-4") do
        carousel_remove_image_button(image_id: image&.id)
      end
    ].safe_join
  end
end
%>

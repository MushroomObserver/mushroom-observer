<%# locals: (f:, action:, button_name:, location:, logging_optional:, include_naming: false) -%>

<%# When and Where (location) section of create_observation form
    including location autocomplete, map, lat/long/alt, naming %>
<%
t_s = {
  lat: { abbr: :LAT.l, full: :LATITUDE.l, addon: "ยบ" },
  lng: { abbr: :LNG.l, full: :LONGITUDE.l, addon: "ยบ" },
  alt: { abbr: :ALT.l, full: :ALTITUDE.l, addon: "m" }
}
%>

<%= tag.div(class: "panel-body border-top", id: "observation_details") do %>

  <%= tag.div(class: "row") do %>
    <%= tag.div(class: "col-xs-12 col-md-6") do %>
      <!-- WHEN -->
      <%= date_select_with_label(
        form: f, field: :when, label: :WHEN.t + ":",
      ) %>
      <!-- /WHEN -->

      <%= tag.div(id: "observation_where") do %>
        <!-- WHERE_REASONS -->
        <%= render(partial: "shared/form_location_feedback",
                   locals: { button: button_name } ) %>
        <!-- /WHERE_REASONS -->

        <%= autocompleter_field(
          form: f, field: :place_name, type: :location, class: "mb-0",
          label: [tag.span("#{:WHERE.l}:", class: "unconstrained-label"),
                  tag.span("#{:form_observations_locality_contains.l}:",
                           class: "constrained-label"),
                  tag.span("#{:form_observations_create_locality.l}:",
                           class: "create-label")].safe_join(" "),
          value: @default_place_name || location&.name,
          help: observation_location_help,
          hidden_value: location&.id,
          hidden_data: { map_target: "locationId",
                         north: location&.north, south: location&.south,
                         east: location&.east, west: location&.west },
          # These text strings are the button tooltips:
          create_text: :form_observations_create_locality.l,
          keep_text: :form_observations_use_locality.l,
          edit_text: :form_observations_edit_locality.l,
          # find_text: :form_locations_find_on_map.l,
          # Be precise about which map controller to connect to:
          map_outlet: "#observation_form",
          controller_id: "observation_location_autocompleter",
          # Action ok because there's only one form-exif controller on the page,
          # and it should only affect this autocompleter:
          data: {
            map_target: "placeInput",
            action: "form-exif:pointChanged@window->autocompleter#swap"
          }
        ) %>

        <%= render(partial: "locations/form/bounds_hidden_fields",
                   locals: { location: @location, target_controller: :map }) %>
        <!-- /WHERE -->

        <!-- IS_COLLECTION_LOCATION -->
        <%= check_box_with_label(
          form: f, field: :is_collection_location,
          label: :form_observations_is_collection_location.l,
          help: :form_observations_is_collection_location_help.t,
          class: "ml-5 mb-5"
        ) %>
        <!-- /IS_COLLECTION_LOCATION -->

        <!-- LAT_LONG_ALT -->
        <%= check_box_with_label(
          form: f, field: :has_geolocation, # field is ignored
          label: "#{:GEOLOCATION.l}:",
          help: :form_observations_lat_long_help.t,
          data: { toggle: "collapse", target: "#observation_geolocation",
                  form_exif_target: "collapseCheck" },
          aria: { controls: "observation_geolocation",
                  expanded: @observation.lat }
        ) %>

        <%= tag.div(id: "observation_geolocation",
                    class: class_names("collapse", ("in" if @observation.lat)),
                    data: { form_exif_target: "collapseFields" }) do %>

          <%= tag.p(:form_observations_click_point.l) %>

          <%= tag.div(class: "row no-gutters",
                      id: "observation_lat_lng_alt") do %>
            <% [:lat, :lng, :alt].each do |key| %>
              <%= tag.div(class: "col-xs-4") do
                text_field_with_label(
                  form: f, field: key, class: "mb-0", addon: t_s[key][:addon],
                  label: [
                    tag.span("#{t_s[key][:full]}:",
                             class: "d-none d-sm-inline"),
                    tag.span("#{t_s[key][:abbr]}:",
                             class: "d-inline d-sm-none")
                  ].safe_join,
                  data: { map_target: "#{key}Input",
                          action: "map#bufferInputs" }
                )
              end %>
            <% end %>
          <% end %>

          <%= check_box_with_label(
            form: f, field: :gps_hidden, label: :form_observations_gps_hidden.l,
            class: "ml-5 mb-5"
          ) %>

        <%# collapse_help_block(nil, id: "geolocation_help") do %>
          <%# tag.p(:form_observations_lat_long_help.t) %>
        <% end %>
        <!-- /LAT_LONG_ALT -->

        <% if logging_optional %>
          <%= check_box_with_label(
            form: f, field: :log_change, checked: "checked",
            label: :form_observations_log_change.t
          ) %>
        <% end %>
      <% end %>
    <% end %><!--.col-->

    <!-- MAP -->
    <%= tag.div(class: "col-xs-12 col-md-6") do %>
      <%= render(
            partial: "shared/form_location_map",
            locals: { id: "observation_form_map", map_type: "observation" }
          ) %>
    <% end %>
    <!-- /MAP -->
  <% end %><!--.row-->

<% end %>

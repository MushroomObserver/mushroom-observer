<%# When and Where (location) section of create_observation form
    including location autocomplete, map, lat/long/alt %>

<%= panel_block(id: "observation_details",
                heading: :show_observation_details.l) do %>

  <div class="row mt-3">
    <div class="col-xs-12 col-md-6">
      <!-- WHEN -->
      <%= date_select_with_label(
        form: f, field: :when, object: @observation, label: :WHEN.t + ":",
      ) %>
      <!-- /WHEN -->

      <%= tag.div(id: "observation_where") do %>
        <%= tag.p do
          [tag.strong("#{:WHERE_GROUP.l}:"),
           collapse_info_trigger("geolocation_help")].safe_join(" ")
        end %>
        <!-- LAT_LONG_ALT -->
        <div class="row no-gutters" id="observation_lat_lng_alt">
          <div class="col-xs-4">
            <%= text_field_with_label(
              form: f, field: :lat, class: "mb-0", addon: "ยบ",
              label: [
                tag.span("#{:LATITUDE.l}:", class: "d-none d-sm-inline"),
                tag.span("#{:LAT.l}:", class: "d-inline d-sm-none")
              ].safe_join,
              data: { map_target: "latInput", action: "map#bufferInputs" }
            ) %>
          </div>
          <div class="col-xs-4">
            <%= text_field_with_label(
              form: f, field: :lng, class: "mb-0", addon: "ยบ",
              label: [
                tag.span("#{:LONGITUDE.l}:", class: "d-none d-sm-inline"),
                tag.span("#{:LNG.l}:", class: "d-inline d-sm-none")
              ].safe_join,
              data: { map_target: "lngInput", action: "map#bufferInputs" }
            ) %>
          </div>
          <div class="col-xs-4">
            <%= text_field_with_label(
              form: f, field: :alt, class: "mb-0", addon: "m",
              label: [
                tag.span("#{:ALTITUDE.l}:", class: "d-none d-sm-inline"),
                tag.span("#{:ALT.l}:", class: "d-inline d-sm-none")
              ].safe_join, # (#{:units_meters.t})
              data: { map_target: "altInput" }
            ) %>
          </div>
        </div><!--.row-->

        <%= collapse_help_block(nil, id: "geolocation_help") do %>
          <%= tag.p(:form_observations_click_point.l) %>
          <%= tag.p(:form_observations_lat_long_help.t) %>
        <% end %>

        <%= check_box_with_label(form: f, field: :gps_hidden,
                                 label: :form_observations_gps_hidden.l) %>
        <!-- /LAT_LONG_ALT -->

        <!-- WHERE_REASONS -->
        <%= render(partial: "shared/form_location_feedback",
                   locals: { button: button_name } ) %>
        <!-- /WHERE_REASONS -->

        <%# NOTE:
        Both the map & form-exif controllers dispatch a pointChanged event.
            detail: { type, request_params: { lat, lng } }
        For now we need both events. When form-exif updates the lat/lng inputs,
        it's not caught as a change by map, because it's been changed by js.
        Also, map only fires the event after buffering. %>
        <!-- WHERE -->
        <%= autocompleter_field(
          form: f, field: :place_name, type: :location,
          label: [tag.span("#{:WHERE.l}:", class: "unconstrained-label"),
                  tag.span("#{:form_observations_locality_contains.l}:",
                           class: "constrained-label"),
                  tag.span("#{:form_observations_create_location.l}:",
                           class: "create-label")].safe_join(" "),
          between: collapse_info_trigger("where_help"),
          hidden: location&.id,
          hidden_data: { map_target: "locationId",
                         north: location&.north, south: location&.south,
                         east: location&.east, west: location&.west },
          # button: modal_link_to("location",
          #                       :form_observations_create_location.l,
          #                       new_location_path, icon: :add,
          #                       class: "btn btn-default"),
          create_text: :form_observations_create_location.l,
          map_outlet: ".map-outlet",
          data: { map_target: "placeInput",
                  action: [
                    "map:pointChanged@window->autocompleter#swap",
                    "form-exif:pointChanged@window->autocompleter#swap",
                    "map:googlePrimer@window->autocompleter#refreshGoogle"
                  ].join(" ") }
        ) %>
        <%= collapse_help_block(nil, id: "where_help") do
          observation_location_help
        end %>
        <%= fields_for(:location) do |f_l| %>
          <%= f_l.hidden_field(:north, data: { map_target: "northInput" }) %>
          <%= f_l.hidden_field(:south, data: { map_target: "southInput" }) %>
          <%= f_l.hidden_field(:east, data: { map_target: "eastInput" }) %>
          <%= f_l.hidden_field(:west, data: { map_target: "westInput" }) %>
          <%= f_l.hidden_field(:low, data: { map_target: "lowInput" }) %>
          <%= f_l.hidden_field(:high, data: { map_target: "highInput" }) %>
        <% end %>
        <!-- /WHERE -->

        <!-- IS_COLLECTION_LOCATION -->
        <%= check_box_with_label(
              form: f, field: :is_collection_location,
              label: :form_observations_is_collection_location.l,
              append: collapse_info_trigger("is_collection_location_help",
                                            class: "ml-3")
            ) %>
        <%= collapse_help_block(nil, id: "is_collection_location_help") do %>
          <%= :form_observations_is_collection_location_help.t %>
        <% end %>
        <!-- /IS_COLLECTION_LOCATION -->
      <% end %>
    </div><!--.col-->

    <!-- MAP -->
    <div class="col-xs-12 col-md-6" id="observation_geolocation">
      <%= tag.div(class: "btn-group", role: "group",
                  data: { map_target: "controlWrap" }) do %>
        <%= js_button(
          button: [
            link_icon(:globe),
            tag.span(:form_observations_open_map.l, class: "map-show mx-2"),
            tag.span(:form_observations_hide_map.l, class: "map-hide mx-2")
          ].safe_join,
          name: "map_toggle", class: "map-toggle",
          data: { map_target: "toggleMapBtn", action: "map#toggleMap",
                  toggle: "collapse", target: "#observation_form_map" },
          aria: { expanded: "false", controls: "observation_form_map" }
        ) %>
        <%= js_button(
          button: :form_observations_clear_map.l,
          name: "map_clear", class: "map-clear",
          data: { map_target: "mapClearBtn",
                  action: "map#clearMap form-exif#reenableButtons" }
        ) %>
      <% end %>
      <%= tag.div(
        "", id: "observation_form_map",
            class: "observation-form-map collapse",
            data: { indicator_url: asset_path('indicator.gif'),
                    location_format: User.current_location_format,
                    map_target: "mapDiv", editable: true,
                    map_type: "observation" }
      ) %>
    </div>
    <!-- /MAP -->

  </div><!--.row-->

<% end %>

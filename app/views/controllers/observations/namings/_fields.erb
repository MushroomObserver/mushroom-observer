<%
# This is included by obs form, naming new/edit form + lightbox identifier

unfocused ||= false
focus_on_name = !unfocused && (button_name != :CREATE.l || @given_name.empty?)
focus_on_vote = !unfocused && (button_name == :CREATE.l && @given_name.present?)

feedback_locals = {
  f: f,
  button_name: button_name,
  given_name: @given_name,
  valid_names: @valid_names,
  suggest_corrections: @suggest_corrections,
  parent_deprecated: @parent_deprecated,
  names: @names
}
menu = unless @vote&.value&.nonzero?
         Vote.opinion_menu
       else
         Vote.confidence_menu
       end
confidences = options_for_select(menu, @vote&.value)
select_opts = { include_blank: ["new", "create"].include?(action_name) }
context ||= "blank"
name_help ||= :form_naming_name_help.t
feedback = if @given_name.present?
             tag.div do
               render(partial: "shared/form_name_feedback",
                      locals: feedback_locals)
             end
           else
             ""
           end
%>

<%=
[
  feedback,
  fields_for(:naming) do |f_n|
    [
      autocompleter_field(
        form: f_n, field: :name, type: :name, label: "#{:WHAT.t}:",
        value: @given_name, autofocus: focus_on_name, help: name_help
      ),
      f_n.fields_for(:vote) do |f_v|
        select_with_label(form: f_v, field: :value,
                          options: confidences, select_opts: select_opts,
                          label: :form_naming_confidence.t + ":",
                          autofocus: focus_on_vote)
      end,
      f_n.fields_for(:reasons) do |f_r|
        naming_form_reasons_fields(f_r, @reasons)
      end
    ].safe_join
  end,
  hidden_field_tag(:context, context)
].compact.safe_join
%>

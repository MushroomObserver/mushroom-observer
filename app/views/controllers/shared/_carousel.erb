<%=
# TODO: make this a component
# Required args: images:
# Optional args: object: (the carousel is usually for an object)
# top_img: (defaults to first), (carousel)title:, (image_edit)links:
# thumbnails: true for thumbnail navigation
# img_args: args for ImagePresenter
#
# Note: uses concat(x) instead of [x,y].safe_join because of conditionals

images ||= nil
object ||= nil
size ||= :large
top_img ||= images.first
title ||= :IMAGES.t
links ||= ""
thumbnails = true if thumbnails.nil?
type = object&.type_tag || "image"
html_id ||= "#{type}_#{object.id}_carousel"

concat(carousel_heading(title, links)) if thumbnails
if !images.nil? && images.any?
  tag.div(class: "carousel slide", id: html_id,
          data: { ride: "false", interval: "false" }) do
    concat(tag.div(class: "carousel-inner bg-light", role: "listbox") do
      images.each do |image|
        concat(turbo_stream_from(image))
        concat(render(partial: "shared/carousel_item",
                      locals: { image:, **local_assigns }))
      end
      concat(carousel_controls(html_id)) if images.length > 1
    end)
    concat(carousel_thumbnails(**local_assigns)) if thumbnails
  end
else
  concat(carousel_no_images_message)
end
%>

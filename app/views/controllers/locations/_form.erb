<%
@location.force_valid_lat_lngs!

case action_name
when "new", "create"
  url_params = add_query_param({
    action: :create,
    where: @original_name,
    approved_where: @display_name,
    set_observation: @set_observation,
    set_species_list: @set_species_list,
    set_user: @set_user,
    set_herbarium: @set_herbarium,
    q: get_query_param
  })
  button = :CREATE.l
when "edit", "update"
  url_params = add_query_param(
    { action: :update, id: @location.id, approved_where: @display_name }
  )
  button = :UPDATE.l
end

form_args = {
  model: @location, url: url_params, id: "location_form"
}

if local_assigns[:local] == true
  form_args = form_args.merge({ local: true })
else
  form_args = form_args.deep_merge({ data: { turbo: true } })
end

map_args = { editable: true, map_type: "location" }
%>

<%= form_with(**form_args) do |f| %>

  <% if !@location.locked || in_admin_mode? %>

    <%= render(partial: "shared/form_location_feedback",
               locals: { button: } ) %>

    <%# NOTE: All other Stimulus data is on the map div, but we need
    the fields inside the controller scope, so map has controller: nil %>
    <%= tag.div(class: "row", data: { controller: "map" }) do %>
      <%= tag.div(class: "col-md-8 col-lg-6") do %>
        <%= render(partial: "locations/form/fields",
                   locals: { f:, button:, location: @location,
                   display_name: @display_name }) %>
      <% end %>

      <%= tag.div(class: "col-md-4 col-lg-6 mb-3 mt-3") do
        make_map(objects: [@location], **map_args.merge({ controller: nil }))
      end %><!--.col-md-4 col-lg-6-->
    <% end %><!--.row-->

  <% else %>

    <%= render(partial: "locations/form/show_locked", locals: { f: f }) %>

  <% end %>

<% end %>

<%
  # IMPORTANT: Sometimes it's prohibitive to do the extra join to images table,
  # so we only have image_id.  It's still possible to render the image with
  # nothing but the image_id.  (But not votes, original name, etc.)
  image, image_id = image.is_a?(Image) ? [image, image.id] : [nil, image]
  size_url   = Image.url(size, image_id)
  medium_url = Image.url(:medium, image_id)
  large_url  = Image.url(:large, image_id)
  huge_url   = Image.url(:huge, image_id)
  full_url   = Image.url(:full_size, image_id)
  orig_url   = Image.url(:original, image_id)
   #If the image is part of an image set.
  is_set = is_set || false

%>

<div style="position:relative">
  <div style="display:inline">
    <div data-toggle="expand-icon" class="text-center">
      <% style = "max-width: 100%; height: auto; margin: auto;" if responsive
      img_class = "img-unresponsive #{img_class}" if !responsive
      img_tag = image_tag(size_url, title: notes, style: style, class: img_class,
                          data: {toggle: "tooltip", placement: "bottom"}) %>
      <%= link_with_query(img_tag, link, html_options) %>
      <%= link_to("", huge_url, class: "glyphicon glyphicon-fullscreen theater-btn",
                  data: {lightbox: is_set ? "observation-set" : SecureRandom.uuid,
                         title: "<a href='#{orig_url}' target='_blank' class='lightbox_link'>#{:image_show_original.t}</a>".html_safe}) %>
      <div class="push-down">
        <% if User.current and votes and image %>
          <%= render(partial: "image/image_vote_links", locals: {image: image}) %>
        <% end %>
        <% if original && image && !image.original_name.blank? &&
              (check_permission(image) || image.user && image.user.keep_filenames == :keep_and_show) %>
          <center>
            <span><%= image.original_name %></span>
          </center>
        <% end %>
      </div>
    </div>
  </div>
</div>

<%
# This is included by obs form, naming new/edit form + lightbox identifier

# Prefer NamingParams, but use raw params if no params.
what = @params.what rescue @what
valid_names = @params.valid_names rescue @valid_names
suggest_corrections = @params.suggest_corrections rescue @suggested_corrections
parent_deprecated = @params.parent_deprecated rescue @parent_deprecated
reasons = @params.reasons rescue @reasons
names = @params.names rescue @names
vote = @params.vote rescue @vote

unfocused ||= false
focus_on_name = !unfocused && (button_name != :CREATE.l || what.empty?)
focus_on_vote = !unfocused && (button_name == :CREATE.l && what.present?)

locals = {
  button_name: button_name,
  what: what,
  valid_names: valid_names,
  suggest_corrections: suggest_corrections,
  parent_deprecated: parent_deprecated,
  names: names
}
%>

<div class="row">
  <div class="col-xs-12 col-sm-6">
    <%= render(partial: "shared/form_name_feedback",
               locals: locals) if what.present? %>
  </div>
</div><!--.row-->

<%= fields_for(:naming) do |f_n| %>
  <div class="row mt-3">
    <div class="col-sm-6">
      <div class="form-group">
        <%= f_n.label(:name, :WHAT.t + ":") %>
        <%= f_n.text_field(:name, value: what, size: 40, class: "form-control",
                           autocomplete: "off", # turn off browser autocomplete
                           data: { autofocus: focus_on_name }) %>
        <% turn_into_name_auto_completer(:naming_name, primer: Name.primer) %>
      </div>
    </div>

    <div class="col-sm-6">
      <%= help_block_with_arrow("left", id: "naming_name_help") do %>
        <%= tag.p(:form_naming_name_help.t) %>
      <% end # help_block_with_arrow do %>
    </div>
  </div><!--.row-->

  <div class="row">
    <div class="col-sm-6">

      <%= f_n.fields_for(:vote) do |f_v| %>
        <div class="form-group">
          <%= f_v.label(:value, :form_naming_confidence.t + ":") %><br>
          <%= f_v.select(:value,
                         options_for_select(Vote.confidence_menu, vote&.value),
                         { include_blank: (action == :create) },
                         class: "form-control",
                         data: { autofocus: focus_on_vote }) %>
        </div>
      <% end # fields_for(:vote) %>

      <%= f_n.fields_for(:reasons) do |f_r| %>
        <% reasons.values.sort_by(&:order).each do |r| %>
          <div class="checkbox">
            <%= f_r.label("#{r.num}_check",
                          { data: {
                              toggle: "collapse",
                              target: "#reasons_#{r.num}_notes"
                            },
                            aria: {
                              expanded: "false",
                              controls: "reasons_#{r.num}_notes"
                            } }) do %>
              <%= f_r.check_box(
                        :check,
                        { index: r.num,
                          checked: r.used?,
                          class: "" },
                        "1") %>
              <%= r.label.t %>
            <% end  # label %>
          </div>
          <div class="form-group mb-3 <%= "collapse" if !r.used? %>"
               id="reasons_<%= r.num %>_notes">
            <%= f_r.text_area(:notes,
                              index: r.num, rows: 3, value: r.notes,
                              class: "form-control") %>
          </div>
        <% end # reasons.values.each %>
      <% end  # fields_for(:reasons) do %>

    </div><!--.col-->
  </div><!--.row-->
<% end # fields_for(:naming) do %>

<%= hidden_field_tag(:was_js_on, "yes") if can_do_ajax? %>
<% inject_javascript_at_end %(
  jQuery(document).ready(function() {
    jQuery(document).on('shown.bs.collapse', '.collapse', function () {
      $(this).first('textarea').focus();
    });
  });
) %>

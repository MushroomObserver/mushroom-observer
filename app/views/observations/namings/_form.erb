<%
# Fields must be separate because they're included in the obs form too.
# HTML ID's may seem overly precise, but there may be more than one of
# these forms open on a page if modal. IDs must be unique. 
case action_name
when "new", "create"
  button_name = :CREATE.l
  method = :post
  id = "obs_#{@observation.id}_naming_form"
  url = observation_namings_path(observation_id: @observation.id,
                                 approved_name: @params.what,
                                 q: get_query_param)
when "edit", "update"
  button_name = :SAVE_EDITS.l
  method = :patch
  id = "obs_#{@observation.id}_naming_#{@naming.id}_form"
  url = observation_naming_path(id: @naming.id,
                                approved_name: @params.what,
                                q: get_query_param)
end

form_args = { model: @naming, url: url, method: method, id: id }
if local_assigns[:local] == true
  form_args = form_args.merge({ local: true })
else
  form_args = form_args.deep_merge({ data: { turbo: true } })
end

# Note: the form needs local_assigns[:form_locals].
# I can't find where show_reasons is ever false - AN 20230801
form_locals = local_assigns[:form_locals] || {}
%>

<%= form_with(**form_args) do |f| %>

  <%= submit_button(form: f, button: button_name, center: true) %>

  <%= render(partial: "observations/namings/fields",
             locals: { f: f, button_name: button_name }.merge(form_locals)) %>

<% end # form %>

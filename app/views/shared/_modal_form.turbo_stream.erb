<%
# Entire template for a Bootstrap modal with a form.
# Called in turbo_stream responses from `new` and `edit` form actions
# and re-called from `create` and `update if form needs work.
#
# These actions can send a turbo_stream to `#modal_flash_#{identifier}`
#
# Requires these locals:
#   identifier, used to build html ids for parts of the modal
#   title, the text in the modal-header h4
#   form, full path (after /views/) of the partial building the form
#   (locals) anything else you want to send to the body partial.
#      { local: false } gets merged so that form sends via js

# In order to keep form progress if the modal is closed and opened again,
# we're setting the data attribute "busy" as "true".
# Successful submit sets it "false".
# Modals that are "busy" are not destroyed when closed.

# This thing could specify a turbo-frame to update, couldn't it?
# note: MUST REMOVE **.html**.erb file extension from form partials!
# Form submit button must deep merge the local_assigns[:data]

form_locals = local_assigns.except(:identifier, :title, :form_partial)
%>

<%=
tag.div(
  class: "modal", id: "modal_#{identifier}", role: "dialog",
  aria: { labelledby: "modal_header_#{identifier}" },
  data: { controller: "modal-form",
          action: "section-update:updated@window->modal-form#remove",
          identifier: identifier } # not sure
) do
  tag.div(class: "modal-dialog modal-lg", role: "document") do
    tag.div(class: "modal-content") do
      [
        tag.div(class: "modal-header") do
          [
            tag.button(
              type: :button, class: "close", data: { dismiss: "modal" },
              aria: { label: :CLOSE.l },
            ) { tag.span(aria: { hidden: "true" }) { "&times;".html_safe } },
            tag.h4(title, class: "modal-title",
                   id: "modal_header_#{identifier}") # turbo
          ].safe_join
        end,
        tag.div(class: "modal-body", id: "modal_body_#{identifier}") do
          [
            tag.turbo_frame("", id: "modal_flash_#{identifier}"), # turbo
            render(partial: form_partial, locals: form_locals) # turbo
          ].safe_join
        end
      ].safe_join
    end
  end
end
%>

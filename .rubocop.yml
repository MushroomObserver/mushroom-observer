inherit_from: .rubocop_todo.yml

require:
  - rubocop-performance
  - rubocop-rails

# ------------------------------------------------------------------------------
#
# UPDATING RUBOCOP in MushroomObserver
# Please use the following procedure or equivalent in order to:
# - Avoid discrepancies between RuboCop locally vs in continuous integration;
# - Prevent increases in the number of offenses.
#
# *** Update the Codeclimate channel
# .codeclimate.yml specifies the RuboCop version ('channel') used
# by Code Climate, which can be different than the version in Gemfile.lock
# See docs.codeclimate.com/docs/rubocop#section-using-rubocop-s-newer-versions
# Therefore .codeclimate.yml should be updated whenever updating RuboCop
#
# *** Install the higher version of rubocop
# - Update the Gemfile
# - bundle update rubocop
#
# *** Update the RuboCop configuration (this file)
# - Run "rubocop --auto-gen-config" BUT DON'T COMMIT .rubocop_todo.yml
# - Add any new cops to .rubocop.yml (this file) if the output so indicates.
#
# *** Fix any new offenses caused by the update
# - Iteratively do the following steps until all new offenses are fixed:
#   - Again run "rubocop --auto-gen-config" BUT DON'T COMMIT .rubocop_todo.yml
#   - Compare the newly generated and existing versions of .rubocop_todo.yml
#   - Fix any new offenses.
# (The initial new offenses will have been caused by new or updated cops.
#  Fixing those offenses may cause new offenses. And so forth.)
#
# *** Prune the todo list
# Compare the new and existing versions of .rubocop_todo.yml (the todo list)
# Accept any changes that reduce the todo list.
#
# ------------------------------------------------------------------------------

# RuboCop configuration
# Uses Rubcop's default configuration, except as specified below
# For more info, see https://docs.rubocop.org/rubocop/configuration.html

AllCops:

  ########################### Excluded files ###################################
  # Completely ignore the following
  Exclude:
    - .codeclimate.yml
    - app/assets/javascripts/bootstrap.js
    - app/assets/javascripts/jquery.js
    - app/assets/javascripts/jstz.js
    - app/assets/javascripts/lightbox.js
    - "app/views/api/**/*"
    - "db/**/*"
    - "log/**/*"
    - public/design_test/jquery-1.5.2.min.js
    # We need not check these scripts, and some of them cause Rubocop errors
    - "script/old/**/*"
    # not Ruby
    - script/perf_monitor
    - "tmp/**/*"

# ------------------------------------------------------------------------------

#####  Individual Cops

# Use RuboCop's default configuration, except as specified below
# Note: pending cops have no default, so must be explicitly specified

# Rubocop supports multiple options and MO uses a non-default
Layout/DotPosition:
  EnforcedStyle: trailing

# (0.83) pending cop
Layout/EmptyLinesAroundAttributeAccessor:
  Enabled: true

# Repeat the default because Codeclimate ignores it as of 2019-07-09
Layout/HashAlignment:
  EnforcedColonStyle: key

# Rubocop supports multiple options and MO uses a non-default
Layout/LineLength:
  # RuboCop default is 120 as of 0.84
  Max: 80

# (0.82) pending cop
Layout/SpaceAroundMethodCallOperator:
  Enabled: true

# (0.89) pending cop
Lint/BinaryOperatorWithIdenticalOperands:
  Enabled: true

# (0.84) pending cop
Lint/DeprecatedOpenSSLConstant:
  Enabled: true

# (0.88) pending cop
Lint/DuplicateElsifCondition:
  Enabled: true

# (0.89) pending cop
Lint/DuplicateRescueException:
  Enabled: true

# (0.89) pending cop
Lint/EmptyConditionalBody:
  Enabled: true

# (0.89) pending cop
Lint/FloatComparison:
  Enabled: true

# (0.89) pending cop
Lint/MissingSuper:
  Enabled: true

# (0.89) pending cop
Lint/OutOfRangeRegexpRef:
  Enabled: true

# (0.85) pending cop
Lint/MixedRegexpCaptureTypes:
  Enabled: true

# (0.81) pending cop
Lint/RaiseException:
  Enabled: true

# (0.89) pending cop
Lint/SelfAssignment:
  Enabled: true

# (0.81) pending cop
Lint/StructNewOverride:
  Enabled: true

# (0.89) pending cop
Lint/TopLevelReturnWithArgument:
  Enabled: true

# (0.89) pending cop
Lint/UnreachableLoop:
  Enabled: true

Metrics/AbcSize:
# Can we try relaxing this one?  Even short simple methods sometimes exceed
# 15 or 16.  Simplifying them further just forces us to make tons of tiny
# trivial methods with really cumbersome names, without actually making
# the code any better.
# Max: 15
  Max: 20
  Exclude:
    # This Cop makes less sense in tests, we regularly ignore it.
    - "test//**/*"

Metrics/BlockLength:
  Exclude:
    # This Cop makes less sense in tests, we regularly ignore it.
    - "test//**/*"

Metrics/ClassLength:
# Relaxed metrics based on CodeClimages default .rubocop.yml
# Max: 100
  Max: 250
  Exclude:
    # This Cop makes less sense in tests, we regularly ignore it.
    - "test//**/*"

Metrics/CyclomaticComplexity:
  Exclude:
    # This Cop makes less sense in tests, we regularly ignore it.
    - "test//**/*"

Metrics/MethodLength:
# Relaxed metrics based on CodeClimages default .rubocop.yml
# Max: 10
  Max: 30
  Exclude:
    # This Cop makes less sense in tests, we regularly ignore it.
    - "test//**/*"

Metrics/ModuleLength:
# Relaxed metrics based on CodeClimages default .rubocop.yml
# Max: 100
  Max: 250
  Exclude:
    # This Cop makes less sense in tests, we regularly ignore it.
    - "test//**/*"

Metrics/PerceivedComplexity:
  Exclude:
    # This Cop makes less sense in tests, we regularly ignore it.
    - "test//**/*"

# Disable because it does not work with Unicode in Ruby 2.4
# Cop supports --auto-correct.
Performance/Casecmp:
  Enabled: false

Performance/RegexpMatch:
  # Autocorrect changes "something.match(regexp)" to "something.match?(regexp)".
  # The latter throws an error when something == nil:
  #   undefined method `match?' for nil:NilClass
  # So manually correct to: regexp.match?(something)
  AutoCorrect: false

# Causes test failures when used with Rubocop auto-correct
# Could we get autocorrect to work by configuring the Whitelist parameter
Rails/DynamicFindBy:
  AutoCorrect: false

# MO uses HABTM extensively; RuboCop prefers the newer has_many through
# Switching would require a migration process, detailed here:
# http://chrisrolle.com/en/blog/migration-path-from-habtm-to-has_many-through
# It's not worth the effort
Rails/HasAndBelongsToMany:
  Enabled: false

# (0.87) pending cop
Style/AccessorGrouping:
  Enabled: true

# (0.88) pending cop
Style/ArrayCoercion:
  Enabled: true

# Allow non-ascii characters in comments; we need to use accented chars
Style/AsciiComments:
  Enabled: false

# (0.87) pending cop
Style/BisectedAttrAccessor:
  Enabled: true

# (0.88) pending cop
# Unsafe -- although the 0.88 documentation says "Safe"
# The edge case is an if-elsif with a regex,
# where the following code depends on $1 being something other than true/false,
# e.g., where it uses a named capture group.
# This has been reported https://github.com/rubocop-hq/rubocop/issues/8541
Style/CaseLikeIf:
  Enabled: true

# Repeat the RuboCop default because CodeClimate silently overrides it
# Is this still true? JDC 2020-08-17
Style/DateTime:
  Enabled: false

# (0.89) pending cop
Style/ExplicitBlockArgument:
  Enabled: true

# (0.82) pending cop
Style/ExponentialNotation:
  Enabled: true

# (0.89) pending cop
Style/GlobalStdStream:
  Enabled: true

# (0.88) pending cop
Style/HashAsLastArrayItem:
  Enabled: true

# (0.80) pending cop
Style/HashEachMethods:
  Enabled: true

# (0.88) pending cop
Style/HashLikeCase:
  Enabled: true

# (0.80) pending cop
Style/HashTransformKeys:
  Enabled: true

# (0.80) pending cop
Style/HashTransformValues:
  Enabled: true

Style/FrozenStringLiteralComment:
  AutoCorrect: true

# When the cop is enabled, the default is require_parentheses.
Style/MethodCallWithArgsParentheses:
  Enabled: true

# (0.89) pending cop
Style/OptionalBooleanParameter:
  Enabled: true

# Repeat the RuboCop defaults because Codeclimate silently overrides them
# Is that still true? JDC 2020-08-17?
Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    default: "()"
    '%i':    "[]"
    '%I':    "[]"
    '%r':    "{}"
    '%w':    "[]"
    '%W':    "[]"

# I can't figure out how to get exploded to work with API.
Style/RaiseArgs:
  EnforcedStyle: compact

# (0.87) pending cop
Style/RedundantAssignment:
  Enabled: true

# (0.86) pending cop
Style/RedundantFetchBlock:
  Enabled: true

# (0.88) pending cop
Style/RedundantFileExtensionInRequire:
  Enabled: true

# (0.85) pending cop
Style/RedundantRegexpCharacterClass:
  Enabled: true

# (0.85) pending cop
Style/RedundantRegexpEscape:
  Enabled: true

# (0.89) pending cop
Style/SingleArgumentDig:
  Enabled: true

# (0.83) pending cop
Style/SlicingWithRange:
  Enabled: true

# (0.89) pending cop
Style/StringConcatenation:
  Enabled: true

# Rubocop supports multiple options and MO uses a non-default
Style/StringLiterals:
  EnforcedStyle: double_quotes

# Rubocop supports multiple options and MO uses a non-default
Style/StringLiteralsInInterpolation:
  EnforcedStyle: double_quotes

# MO uses [] not %i() or %I()
Style/SymbolArray:
  EnforcedStyle: brackets


# The following is the beginning of a native MacOSX setup script.
# It is based on the notes I took while getting my local Apple M1
# working under the Monterey (12.4) version of MacOS.

# You will need to get Xcode (free download from the App Store) and
# install the command line tools with:
#
# xcode-select --install

# You will also need homebrew from https://brew.sh/:
#
# /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

# If you already have homebrew install you may want to do:
# brew outdated # Reports on outdated recipes
# brew upgrade

# Install a bunch of useful stuff from Homebrew

brew install git mysql exiftool libjpeg shared-mime-info openssl imagemagick findutils

# Configure MySQL
brew services start mysql
mysqladmin -u root password 'root'

# Make sure you have an update to checkout of this repo in a local directory.
# Since you're reading this you may have already done that.
# In case you haven't run:

# git clone git@github.com:MushroomObserver/mushroom-observer.git
# cd mushroom-observer

# Make sure you have the current version of Ruby.
if ! [[ `ruby --version` =~ `cat .ruby-version` ]]; then
    echo You need to install version `cat .ruby-version` of ruby
fi

# There are various tools for this (rvm, chruby, rbenv).
# MO has generally used rvm, but I used chruby most recently
# because it was already installed.
# For chruby you need to run:
#    ruby-build $RUBY_VERSION ~/.rubies/ruby-$RUBY_VERSION
#    chruby $RUBY_VERSION
# Then open a new shell

gem install bundler

if [ ! -f config/database.yml ]; then
    cp db/macos/database.yml config
    echo Copied config/database.yml
else
    echo database.yml exists
fi

if [ ! -f config/gmaps_api_key.yml ]; then
    cp config/gmaps_api_key.yml-template config/gmaps_api_key.yml
    echo Copied config/gmaps_api_key.yml
else
    echo gmaps_api_key.yml exists
fi

for dir in images test_images;
do
    for subdir in thumb 320 640 960 1280 orig;
    do
	if [ ! -d public/$dir/$subdir ]; then
	    mkdir -p public/$dir/$subdir
	    echo Created public/$dir/$subdir
	else
	    echo public/$dir/$subdir exists
	fi
    done
done


if [ ! -f /usr/local/bin/jpegresize ]; then
    sudo gcc script/jpegresize.c -I/opt/homebrew/include -L/opt/homebrew/lib -ljpeg -lm -O2 -o /usr/local/bin/jpegresize
    echo Created and installed jpegresize executable
else
    echo jpegresize exists
fi

if [ ! -f /usr/local/bin/exifautotran ]; then
    sudo cp script/exifautotran /usr/local/bin/exifautotran
    sudo chmod 755 /usr/local/bin/exifautotran
    echo Installed exifautotran script
else
    echo exifautotran exists
fi

# I needed to run the following to get the mysql2 gem to install.
# Your mileage may vary...
gem install mysql2 -v '0.5.3' -- --with-opt-dir=$(brew --prefix openssl) --with-ldflags=-L/opt/homebrew/opt/zstd/lib
bundle config --global build.mysql2 "--with-opt-dir=$(brew --prefix openssl) --with-ldflags=-L/opt/homebrew/opt/zstd/lib"

git pull
bundle install

mysql -u mo -pmo mo_development -e ''
if [ ! $? -eq 0 ]; then
    mysql -u root -proot < db/initialize.sql
    bin/rails db:environment:set RAILS_ENV=development
    rails db:schema:load
    rails db:fixtures:load
    echo Created and populated mo_development database
else
    rails db:migrate
    echo Ran migrations on the mo_development database
fi

rails lang:update
rm config/credentials.yml.enc
EDITOR='echo "test_secret: magic" >> ' rails credentials:edit

# Hopefully this is not necessary on a fresh clean system, but I had to run
#    gem pristine --all
# for each version of Ruby in chruby

#!/bin/bash

set -e

### BEGIN INIT INFO
# Provides: unicorn
# Required-Start: $remote_fs $syslog
# Required-Stop: $remote_fs $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start daemon at boot time
# Description: Enable service provided by daemon.
### END INIT INFO

app_root=/var/web/mushroom-observer
pid_file=$app_root/tmp/pids/unicorn.pid
conf_file=$app_root/config/unicorn.rb

function die {
  echo $1
  exit 1
}

# ----------------------------------------------
#  Start server as user mo in production mode.
# ----------------------------------------------

function start_unicorn {
  if [ -s $pid_file ]; then
    die "Unicorn already running."
  else
    echo "Starting unicorn..."
    cd $app_root
    ruby_version=$(cat /var/web/mushroom-observer/.ruby-version)
    rvm_env=/usr/local/rvm/environments/ruby-$ruby_version
    start_cmd="source $rvm_env && bundle exec unicorn_rails -c $conf_file -D"
    case `whoami` in
    mo)
      RAILS_ENV=production bash -c "$start_cmd" || die "FAILED!"
      ;;
    root)
      sudo RAILS_ENV=production -u mo bash -c "$start_cmd" || die "FAILED!"
      ;;
    *)
      die "Must be root or mo to start unicorn!"
    esac
    echo "Unicorn now running as `cat $pid_file`."
  fi
}

# ----------------------------
#  Stop server.
# ----------------------------

function stop_unicorn {
  if [ ! -s $pid_file ]; then
    die "Unicorn not running."
  else
    echo "Stopping unicorn..."
    old_pid=`cat $pid_file`
    rm $pid_file
    kill -QUIT $old_pid
    sleep 1
    # wait up to half a minute for process to die
    for x in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15; do
      ps -p $old_pid > /dev/null 2>&1 && sleep 2
    done
    ps -p $old_pid > /dev/null 2>&1 && die "FAILED! Old pid was $old_pid."
    echo "Unicorn successfully stopped."
  fi
}

# ----------------------------
#  Reload workers.
# ----------------------------

function reload_workers {
  if [ ! -s $pid_file ]; then
    die "Unicorn not running."
  else
    echo "Reloading unicorn workers..."
    kill -HUP `cat $pid_file` || die "FAILED!"
  fi
}

# ----------------------------
#  Show status of server.
# ----------------------------

function show_status {
  if [ ! -s $pid_file ]; then
    die "Unicorn not running."
  else
    pid=`cat $pid_file`
    echo "Unicorn running as $pid."
  fi
}

# ----------------------------
#  Command line switch.
# ----------------------------

case "$1" in
start)
  start_unicorn
  ;;
stop)
  stop_unicorn
  ;;
restart)
  stop_unicorn
  start_unicorn
  ;;
reload)
  reload_workers
  ;;
status)
  show_status
  ;;
*)
  die "Usage: $0 {start|stop|restart|reload|status}"
  ;;
esac

exit 0

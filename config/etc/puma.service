[Unit]
Description=Mushroom Observer Puma HTTP Server
After=network.target

# Uncomment for socket activation (see below)
# Requires=puma.socket

[Service]
# Puma supports systemd's `Type=notify` and watchdog service
# monitoring, as of Puma 5.1 or later.
# On earlier versions of Puma or JRuby, change this to `Type=simple` and remove
# the `WatchdogSec` line.
# Type=notify
Type=simple

# If your Puma process locks up, systemd's watchdog will restart it within seconds.
# WatchdogSec=10

# Preferably configure a non-privileged user
User=mo

# The path to your application code root directory.
# Also replace the "<YOUR_APP_PATH>" placeholders below with this path.
# Example /home/username/myapp
WorkingDirectory=/var/web/mo

PIDFile=/var/web/mo/tmp/puma.pid
Environment=RAILS_ENV=production
Environment=RUBY_MANAGER=chruby
# Helpful for debugging socket activation, etc.
# Environment=PUMA_DEBUG=1

# SystemD will not run puma even if it is in your path. You must specify
# an absolute URL to puma. For example /usr/local/bin/puma
# Alternatively, create a binstub with `bundle binstubs puma --path ./sbin` in the WorkingDirectory
# ExecStart=/<FULLPATH>/bin/puma -C /var/web/mo/puma.rb

# Variant: Rails start.
# ExecStart=/<FULLPATH>/bin/puma -C /var/web/mo/config/puma.rb ../config.ru

# Variant: Use `bundle exec puma` instead of binstub
# Variant: Specify directives inline.
# ExecStart=/<FULLPATH>/puma -b tcp://0.0.0.0:9292 -b ssl://0.0.0.0:9293?key=key.pem&cert=cert.pem

ExecStart=/var/web/mo/bin/run bundle exec puma -e production -C ./config/puma.rb config.ru
ExecReload=/bin/kill -s $MAINPID
ExecStop=/bin/kill -s QUIT $MAINPID

Restart=always

[Install]
WantedBy=multi-user.target
